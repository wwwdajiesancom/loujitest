### set log levels ###
#log4j.rootLogger = debug , stdout , D , E
log4j.rootLogger = debug , stdout , D , E
 
###  output to the console ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
log4j.appender.stdout.Threshold = debug
log4j.appender.stdout.Target = System.out
 
### Output to the log file ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n
log4j.appender.D.Threshold = info
log4j.appender.D.Append = true
log4j.appender.D.File = D:/logs/log4j_soa.log
log4j.appender.D.DatePattern = '.'yyyy-MM-dd HH'.log' 
log4j.appender.D.Encoding = UTF-8

#
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n
log4j.appender.E.Threshold = warn
log4j.appender.E.Append = true
log4j.appender.E.File = ${catalina.base}/logs/log4j_soa_warn.log
log4j.appender.E.DatePattern = '.'yyyy-MM-dd'.log' 
log4j.appender.E.Encoding = UTF-8

#配置ibatis日志输出级别
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#配置SQL输出的日志级别
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
#spring日志级别
log4j.logger.org.springframework=ERROR
log4j.logger.org.compass=ERROR


#日志输出位置:tomcat/logs/
#输入3中形式
#   1.控制台,输出debug及之上级别的
#   2.一个小时生成一个文件,记录的是info及之上级别的,文件名称是:log4j.log.yyyy-MM-dd HH.log
#   3.一天一个日志文件,记录warn及之上级别的,文件名称是:log4j_warn.log.yyyy-MM-dd.log